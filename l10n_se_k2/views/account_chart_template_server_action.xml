<odoo>
    <data>
        <record id="supplement_core_k2_action" model="ir.actions.server">
            <field name="name">Supplement Core K2</field>
            <field name="model_id" ref="account.model_account_chart_template"/>
            <field name="binding_model_id" ref="account.model_account_chart_template"/>
            <field name="state">code</field>
            <field name="code">
vertel_k2 = env.ref('l10n_se_k2.chart_template_K2_2017')
core_k2 = env['account.chart.template'].browse(env['ir.model.data'].search([('name','=','l10nse_chart_template_K2'),('module','=','l10n_se')]).res_id)

core_k2_accounts = env['account.chart.template'].browse(env['ir.model.data'].search([('name','=','l10nse_chart_template_K2'),('module','=','l10n_se')]).res_id).account_ids
general_accounts = env['account.chart.template'].browse(env['ir.model.data'].search([('name','=','l10nse_chart_template'),('module','=','l10n_se')]).res_id).account_ids
core_k2_accounts_general_accounts = core_k2_accounts + general_accounts
#Accounts
for account_template in vertel_k2.account_ids:
    existing_account_template = core_k2_accounts_general_accounts.filtered(lambda x: x.code == account_template.code)
    #raise Exception("wat")
    if existing_account_template:
        existing_account_template.write({
            'code': account_template.code,
            'name': account_template.name,
        })
    else:

        template = env['account.account.template'].create({
            'code': account_template.code,
            'name': account_template.name,
            'chart_template_id': core_k2.id,
            'account_type': account_template.account_type,
        })
        external_id = env['ir.model.data'].create({'module':'l10n_se_k2','name':'vertel_k2_account_'+str(account_template.code),'model':'account.account.template','res_id':template.id})
core_k2_accounts = env['account.chart.template'].browse(env['ir.model.data'].search([('name','=','l10nse_chart_template_K2'),('module','=','l10n_se')]).res_id).account_ids
general_accounts = env['account.chart.template'].browse(env['ir.model.data'].search([('name','=','l10nse_chart_template'),('module','=','l10n_se')]).res_id).account_ids
core_k2_accounts_general_accounts = core_k2_accounts + general_accounts
#Taxes
for account_tax_template in vertel_k2.tax_template_ids:
    existing_tax_template = core_k2.tax_template_ids.filtered(lambda x: x.name == account_tax_template.name)
    if not existing_tax_template:
        new_tax_template = env['account.tax.template'].create({
        "sequence":account_tax_template.sequence,
        "chart_template_id":core_k2.id,
        "name":account_tax_template.name,
        "description":account_tax_template.description,
        "amount":account_tax_template.amount,
        "amount_type":account_tax_template.amount_type,
        "type_tax_use":account_tax_template.type_tax_use,
        })

    
        external_id = env['ir.model.data'].create({'module':'l10n_se_k2','name':'vertel_k2_tax_'+str(new_tax_template.name),'model':'account.tax.template','res_id':new_tax_template.id})
        
        #account.tax.repartition.line.template
        for invoice_repartition_line in account_tax_template.invoice_repartition_line_ids:
            account_template_id = False
            if invoice_repartition_line.account_id:
               account_template_id = core_k2_accounts_general_accounts.filtered(lambda x: x.code == invoice_repartition_line.account_id.code)
               if not account_template_id:
                  raise Exception(invoice_repartition_line.account_id.code)
              
               env['account.tax.repartition.line.template'].create({
               'invoice_tax_id':new_tax_template.id,
               'factor_percent':invoice_repartition_line.factor_percent,
               'repartition_type':invoice_repartition_line.repartition_type,
               'account_id':account_template_id.id,
               })
               
            else:
               env['account.tax.repartition.line.template'].create({
               'invoice_tax_id':new_tax_template.id,
               'factor_percent':invoice_repartition_line.factor_percent,
               'repartition_type':invoice_repartition_line.repartition_type,
               })
               
        for refund_repartition_line_id in account_tax_template.refund_repartition_line_ids:
            account_template_id = False
            if refund_repartition_line_id.account_id:
               account_template_id = core_k2_accounts_general_accounts.filtered(lambda x: x.code == refund_repartition_line_id.account_id.code)
               if not account_template_id:
                  raise Exception(refund_repartition_line_id.account_id.code)
              
               env['account.tax.repartition.line.template'].create({
               'refund_tax_id':new_tax_template.id,
               'factor_percent':refund_repartition_line_id.factor_percent,
               'repartition_type':refund_repartition_line_id.repartition_type,
               'account_id':account_template_id.id,
               })
               
            else:
               env['account.tax.repartition.line.template'].create({
               'refund_tax_id':new_tax_template.id,
               'factor_percent':refund_repartition_line_id.factor_percent,
               'repartition_type':refund_repartition_line_id.repartition_type,
               })
               
       

#Fiscal Position
vertel_positions = env["account.fiscal.position.template"].search([('chart_template_id','=',vertel_k2.id)])
for fiscal_position in vertel_positions:
  existing_fiscal_position = env["account.fiscal.position.template"].search([('chart_template_id','=',core_k2.id),('name','=',fiscal_position.name)])
  if not existing_fiscal_position:
    new_fiscal_template = env['account.fiscal.position.template'].create({
    "name":fiscal_position.name,
    "chart_template_id":core_k2.id,
    "note":fiscal_position.note,
    "auto_apply":fiscal_position.auto_apply,
    "vat_required":fiscal_position.vat_required,
    "country_group_id":fiscal_position.country_group_id.id,
    })
    external_id = env['ir.model.data'].create({'module':'l10n_se_k2','name':'vertel_k2_fiscal_postion'+str(new_fiscal_template.name.replace(" ","-")),'model':'account.fiscal.position.template','res_id':new_fiscal_template.id})
    for account_fiscal_position_tax_template in env['account.fiscal.position.tax.template'].search([('position_id','=',fiscal_position.id)]):
      new_fiscal_tax_template = env['account.fiscal.position.tax.template'].create({
      "position_id": new_fiscal_template.id,
      "tax_src_id" : env['account.tax.template'].search([('name', '=' ,account_fiscal_position_tax_template.tax_src_id.name),("chart_template_id", '=', core_k2.id)]).id,
      "tax_dest_id": env['account.tax.template'].search([('name','=',account_fiscal_position_tax_template.tax_dest_id.name),("chart_template_id", '=', core_k2.id)]).id,
      })
      res_name = 'vertel_k2_fiscal_tax_template' + "_" + new_fiscal_tax_template.position_id.name + "_" + new_fiscal_tax_template.tax_src_id.name + "_" + new_fiscal_tax_template.tax_dest_id.name
      external_id = env['ir.model.data'].create({'module':'l10n_se_k2','name':res_name.replace(" ","-"),'model':'account.fiscal.position.tax.template','res_id':new_fiscal_tax_template.id})
      
    for account_fiscal_position_account_template in env['account.fiscal.position.account.template'].search([('position_id','=',fiscal_position.id)]):
      new_account_fiscal_position_account_template = env['account.fiscal.position.account.template'].create({
      "position_id":new_fiscal_template.id,
      "account_src_id":core_k2_accounts_general_accounts.filtered(lambda x: x.code == account_fiscal_position_account_template.account_src_id.code).id,
      "account_dest_id":core_k2_accounts_general_accounts.filtered(lambda x: x.code == account_fiscal_position_account_template.account_dest_id.code).id,
      })
      res_name = 'vertel_k2_fiscal_tax_template' + "_" + new_account_fiscal_position_account_template.position_id.name + "_" + new_account_fiscal_position_account_template.account_src_id.code + "_" + new_account_fiscal_position_account_template.account_dest_id.code
      external_id = env['ir.model.data'].create({'module':'l10n_se_k2','name':res_name.replace(" ","-"),'model':'account.fiscal.position.account.template','res_id':new_account_fiscal_position_account_template.id})
        
            

        
                    
            </field>
        </record>
    </data>
</odoo>

